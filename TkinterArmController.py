#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.0.1
#  in conjunction with Tcl version 8.6
#    Jan 05, 2021 07:35:11 PM -03  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import unknown_support
import time

robot = None
w = None
finalDec = None

class TopLevel:

    dec = [0, 0, 0]
    increment = 0
    
    def __init__(self, top=None):
        global robot
        time.sleep(1)
        self.dec[0] = robot.arm.readPosition(robot.getServos()[0])
        time.sleep(2)
        self.dec[1] = robot.arm.readPosition(robot.getServos()[1])
        time.sleep(2)
        self.dec[2] = robot.arm.readPosition(robot.getServos()[2])
        time.sleep(2)

        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("600x350")
        top.minsize(120, 1)
        top.maxsize(1540, 845)
        top.resizable(0,  0)
        top.title("Arm Window")
        top.configure(background="#d9d9d9")

        self.TLabel1 = ttk.Label(top)
        self.TLabel1.place(x=0, y=10, height=40, width=600)
        self.TLabel1.configure(background="#d9d9d9")
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(font="-family {Segoe UI} -size 18 -weight bold")
        self.TLabel1.configure(relief="flat")
        self.TLabel1.configure(anchor='center')
        self.TLabel1.configure(justify='center')
        self.TLabel1.configure(text='''Defining pHome for Manipulator''')

        self.TLabel2 = ttk.Label(top)
        self.TLabel2.place(x=442, y=70, height=39, width=105)
        self.TLabel2.configure(background="#d9d9d9")
        self.TLabel2.configure(foreground="#000000")
        self.TLabel2.configure(font="-family {Segoe UI} -size 13 -weight bold -slant italic")
        self.TLabel2.configure(relief="flat")
        self.TLabel2.configure(anchor='center')
        self.TLabel2.configure(justify='left')
        self.TLabel2.configure(text='''Increment:''')

        self.Button100 = tk.Button(top, command = self.buttonIncrement100)
        self.Button100.place(x=455, y=110, height=34, width=77)
        self.Button100.configure(activebackground="#ececec")
        self.Button100.configure(activeforeground="#000000")
        self.Button100.configure(background="#25d8d3")
        self.Button100.configure(disabledforeground="#a3a3a3")
        self.Button100.configure(font="-family {Segoe UI} -size 12")
        self.Button100.configure(foreground="#000000")
        self.Button100.configure(highlightbackground="#d9d9d9")
        self.Button100.configure(highlightcolor="black")
        self.Button100.configure(pady="0")
        self.Button100.configure(text='''100''')

        self.Button1 = tk.Button(top, command = self.buttonIncrement1)
        self.Button1.place(x=455, y=220, height=34, width=77)
        self.Button1.configure(activebackground="#ececec")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#25d8d3")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(font="-family {Segoe UI} -size 12")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''1''')

        self.Button10 = tk.Button(top, command = self.buttonIncrement10)
        self.Button10.place(x=455, y=165, height=34, width=77)
        self.Button10.configure(activebackground="#ececec")
        self.Button10.configure(activeforeground="#000000")
        self.Button10.configure(background="#25d8d3")
        self.Button10.configure(cursor="fleur")
        self.Button10.configure(disabledforeground="#a3a3a3")
        self.Button10.configure(font="-family {Segoe UI} -size 12")
        self.Button10.configure(foreground="#000000")
        self.Button10.configure(highlightbackground="#d9d9d9")
        self.Button10.configure(highlightcolor="black")
        self.Button10.configure(pady="0")
        self.Button10.configure(text='''10''')

        self.TProgressbarM0 = ttk.Progressbar(top)
        self.TProgressbarM0.place(x=90, y=115, width=270, height=22)
        self.TProgressbarM0.configure(length="270")
        self.TProgressbarM0.configure(maximum="1023")
        self.TProgressbarM0.configure(value=str(self.dec[0]))
        self.TProgressbarM0.configure(cursor="crosshair")

        self.TProgressbarM1 = ttk.Progressbar(top)
        self.TProgressbarM1.place(x=90, y=170, width=270, height=22)
        self.TProgressbarM1.configure(length="270")
        self.TProgressbarM1.configure(maximum="1023")
        self.TProgressbarM1.configure(value=str(self.dec[1]))
        self.TProgressbarM1.configure(cursor="crosshair")

        self.TProgressbarM2 = ttk.Progressbar(top)
        self.TProgressbarM2.place(x=90, y=225, width=270, height=22)
        self.TProgressbarM2.configure(length="270")
        self.TProgressbarM2.configure(maximum="1023")
        self.TProgressbarM2.configure(value=str(self.dec[2]))
        self.TProgressbarM2.configure(cursor="fleur")

        self.ButtonM02 = tk.Button(top, command = self.buttonAddM0)
        self.ButtonM02.place(x=370, y=110, height=32, width=30)
        self.ButtonM02.configure(activebackground="#ececec")
        self.ButtonM02.configure(activeforeground="#000000")
        self.ButtonM02.configure(background="#25d8d3")
        self.ButtonM02.configure(disabledforeground="#a3a3a3")
        self.ButtonM02.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.ButtonM02.configure(foreground="#000000")
        self.ButtonM02.configure(highlightbackground="#d9d9d9")
        self.ButtonM02.configure(highlightcolor="black")
        self.ButtonM02.configure(pady="0")
        self.ButtonM02.configure(text='''˃''')

        self.ButtonM12 = tk.Button(top, command = self.buttonAddM1)
        self.ButtonM12.place(x=370, y=165, height=32, width=30)
        self.ButtonM12.configure(activebackground="#ececec")
        self.ButtonM12.configure(activeforeground="#000000")
        self.ButtonM12.configure(background="#25d8d3")
        self.ButtonM12.configure(disabledforeground="#a3a3a3")
        self.ButtonM12.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.ButtonM12.configure(foreground="#000000")
        self.ButtonM12.configure(highlightbackground="#d9d9d9")
        self.ButtonM12.configure(highlightcolor="black")
        self.ButtonM12.configure(pady="0")
        self.ButtonM12.configure(text='''˃''')

        self.ButtonM22 = tk.Button(top, command = self.buttonAddM2)
        self.ButtonM22.place(x=370, y=220, height=32, width=30)
        self.ButtonM22.configure(activebackground="#ececec")
        self.ButtonM22.configure(activeforeground="#000000")
        self.ButtonM22.configure(background="#25d8d3")
        self.ButtonM22.configure(disabledforeground="#a3a3a3")
        self.ButtonM22.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.ButtonM22.configure(foreground="#000000")
        self.ButtonM22.configure(highlightbackground="#d9d9d9")
        self.ButtonM22.configure(highlightcolor="black")
        self.ButtonM22.configure(pady="0")
        self.ButtonM22.configure(text='''˃''')

        self.ButtonM21 = tk.Button(top, command = self.buttonSubM2)
        self.ButtonM21.place(x=50, y=220, height=32, width=30)
        self.ButtonM21.configure(activebackground="#ececec")
        self.ButtonM21.configure(activeforeground="#000000")
        self.ButtonM21.configure(background="#25d8d3")
        self.ButtonM21.configure(disabledforeground="#a3a3a3")
        self.ButtonM21.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.ButtonM21.configure(foreground="#000000")
        self.ButtonM21.configure(highlightbackground="#d9d9d9")
        self.ButtonM21.configure(highlightcolor="black")
        self.ButtonM21.configure(pady="0")
        self.ButtonM21.configure(text='''˂''')

        self.ButtonM01 = tk.Button(top, command = self.buttonSubM0)
        self.ButtonM01.place(x=50, y=110, height=32, width=30)
        self.ButtonM01.configure(activebackground="#ececec")
        self.ButtonM01.configure(activeforeground="#000000")
        self.ButtonM01.configure(background="#25d8d3")
        self.ButtonM01.configure(disabledforeground="#a3a3a3")
        self.ButtonM01.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.ButtonM01.configure(foreground="#000000")
        self.ButtonM01.configure(highlightbackground="#d9d9d9")
        self.ButtonM01.configure(highlightcolor="black")
        self.ButtonM01.configure(pady="0")
        self.ButtonM01.configure(text='''˂''')

        self.ButtonM11 = tk.Button(top, command = self.buttonSubM1)
        self.ButtonM11.place(x=50, y=165, height=32, width=30)
        self.ButtonM11.configure(activebackground="#ececec")
        self.ButtonM11.configure(activeforeground="#000000")
        self.ButtonM11.configure(background="#25d8d3")
        self.ButtonM11.configure(disabledforeground="#a3a3a3")
        self.ButtonM11.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.ButtonM11.configure(foreground="#000000")
        self.ButtonM11.configure(highlightbackground="#d9d9d9")
        self.ButtonM11.configure(highlightcolor="black")
        self.ButtonM11.configure(pady="0")
        self.ButtonM11.configure(text='''˂''')

        self.ButtonDone = tk.Button(top, command = self.buttonDone)
        self.ButtonDone.place(x=270, y=290, height=34, width=83)
        self.ButtonDone.configure(activebackground="#ececec")
        self.ButtonDone.configure(activeforeground="#000000")
        self.ButtonDone.configure(background="#25d8d3")
        self.ButtonDone.configure(disabledforeground="#a3a3a3")
        self.ButtonDone.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.ButtonDone.configure(foreground="#000000")
        self.ButtonDone.configure(highlightbackground="#d9d9d9")
        self.ButtonDone.configure(highlightcolor="black")
        self.ButtonDone.configure(pady="0")
        self.ButtonDone.configure(text='''DONE''')

        self.LabelM0 = tk.Label(top)
        self.LabelM0.place(x=90, y=99, height=16, width=272)
        self.LabelM0.configure(background="#d9d9d9")
        self.LabelM0.configure(disabledforeground="#a3a3a3")
        self.LabelM0.configure(font="-family {Segoe UI} -size 11")
        self.LabelM0.configure(foreground="#000000")
        self.LabelM0.configure(text='''M0: '''+str(self.dec[0]))

        self.LabelM2 = tk.Label(top)
        self.LabelM2.place(x=90, y=209, height=16, width=272)
        self.LabelM2.configure(activebackground="#f9f9f9")
        self.LabelM2.configure(activeforeground="black")
        self.LabelM2.configure(background="#d9d9d9")
        self.LabelM2.configure(disabledforeground="#a3a3a3")
        self.LabelM2.configure(font="-family {Segoe UI} -size 11")
        self.LabelM2.configure(foreground="#000000")
        self.LabelM2.configure(highlightbackground="#d9d9d9")
        self.LabelM2.configure(highlightcolor="black")
        self.LabelM2.configure(text='''M2: '''+str(self.dec[2]))

        self.LabelM1 = tk.Label(top)
        self.LabelM1.place(x=90, y=154, height=16, width=272)
        self.LabelM1.configure(activebackground="#f9f9f9")
        self.LabelM1.configure(activeforeground="black")
        self.LabelM1.configure(background="#d9d9d9")
        self.LabelM1.configure(disabledforeground="#a3a3a3")
        self.LabelM1.configure(font="-family {Segoe UI} -size 11")
        self.LabelM1.configure(foreground="#000000")
        self.LabelM1.configure(highlightbackground="#d9d9d9")
        self.LabelM1.configure(highlightcolor="black")
        self.LabelM1.configure(text='''M1: '''+str(self.dec[1]))

    def buttonIncrement100(self):
        self.increment = 100

    def buttonIncrement10(self):
        self.increment = 10

    def buttonIncrement1(self):
        self.increment = 1

    def setDecServos(self, servo, add = True):
        global robot

        if add:
            self.dec[servo] = self.dec[servo] + self.increment
        else:
            self.dec[servo] = self.dec[servo] - self.increment

        if self.dec[servo] > 1023:
            self.dec[servo] = 1023
        elif self.dec[servo] < 0:
            self.dec[servo] = 0

        robot.arm.move(robot.getServos()[servo],self.dec[servo])

        return self.dec[servo]

    def buttonAddM0(self):
        value = self.setDecServos(0,True) 

        self.LabelM0.configure(text='''M0: '''+str(value))
        self.TProgressbarM0.configure(value=str(value))

    def buttonAddM1(self):
        value = self.setDecServos(1,True) 

        self.LabelM1.configure(text='''M1: '''+str(value))
        self.TProgressbarM1.configure(value=str(value))

    def buttonAddM2(self):
        value = self.setDecServos(2,True) 

        self.LabelM2.configure(text='''M2: '''+str(value))
        self.TProgressbarM2.configure(value=str(value))

    def buttonSubM0(self):
        value = self.setDecServos(0,False) 

        self.LabelM0.configure(text='''M0: '''+str(value))
        self.TProgressbarM0.configure(value=str(value))

    def buttonSubM1(self):
        value = self.setDecServos(1,False) 

        self.LabelM1.configure(text='''M1: '''+str(value))
        self.TProgressbarM1.configure(value=str(value))

    def buttonSubM2(self):
        value = self.setDecServos(2,False) 

        self.LabelM2.configure(text='''M2: '''+str(value))
        self.TProgressbarM2.configure(value=str(value))

    def buttonDone(self):
        global root, finalDec
        finalDec = self.dec
        root.destroy()

class TkinterArmController(tk.Frame):

    def getDec(self):
        global finalDec
        return finalDec

    def vp_start_gui(self):
        global val, w, root
        root = tk.Tk()
        top = TopLevel (root)
        unknown_support.init(root, top)
        root.mainloop()

    def create_TopLevel(self,rt, *args, **kwargs):
        '''Starting point when module is imported by another module.
           Correct form of call: 'create_TopLevel(root, *args, **kwargs)' .'''
        global w, w_win, root
        root = rt
        w = tk.Toplevel (root)
        top = TopLevel (w)
        unknown_support.init(w, top, *args, **kwargs)
        return (w, top)

    def destroy_TopLevel(self):
        global w
        w.destroy()
        w = None

    def __init__(self, robotArm, master=None):
        global robot
        robot = robotArm
        self.vp_start_gui()
